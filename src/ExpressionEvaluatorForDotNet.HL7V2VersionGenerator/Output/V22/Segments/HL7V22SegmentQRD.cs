using System.Linq;
using System.Collections.Generic;

namespace ExpressionEvaluatorForDotNet
{
    public class HL7V22SegmentQRD
    {
        public HL7V2Message message { get; init; }

        public string Id { get { return @"QRD"; } }

        public string SegmentId { get { return @"QRD"; } }
        
        public string LongName { get { return @"Query Definition"; } }
        
        public string Description { get { return @""; } }
        
        public string Sample { get { return @""; } }

        public IList<string> Chapters 
        { 
            get 
            {
                return new[]
                    {
                        "CH_02",

                    };
            }
        }

        public HL7V22SegmentQRD(HL7V2Message message)
        {
            this.message = message;
        }

        internal HL7V22Field _queryDateTime;

public HL7V22Field QueryDateTime
{
    get
    {
        if (_queryDateTime != null)
        {
            return _queryDateTime;
        }

        var fieldData = new HL7V22FieldData
        {
            Id = @"QRD.1",
            Type = @"Field",
            Position = @"QRD.1",
            Name = @"Query Date / Time",
            Length = 26,
            Usage = @"R",
            Rpt = @"1",
            DataType = @"TS",
            DataTypeName = @"Time Stamp",
            TableId = null,
            TableName = null,
            Description = @"date the query was generated by the application program",
            Sample = @"",
            Fields = new[]
                        {
                            new HL7V2FieldData
                        {
                            Id = @"QRD.1.1",
                            Type = @"Component",
                            Position = @"QRD.1.1",
                            Name = @"Time Of An Event",
                            Length = 0,
                            Usage = @"O",
                            Rpt = @"1",
                            DataType = @"ST",
                            DataTypeName = @"String Data",
                            TableId = null,
                            TableName = null,
                            Description = null,
                            Sample = @"",
                            FieldDatas = null
                        },
                        
                        new HL7V2FieldData
                        {
                            Id = @"QRD.1.2",
                            Type = @"Component",
                            Position = @"QRD.1.2",
                            Name = @"Degree Of Precision",
                            Length = 0,
                            Usage = @"O",
                            Rpt = @"1",
                            DataType = @"ST",
                            DataTypeName = @"String Data",
                            TableId = null,
                            TableName = null,
                            Description = null,
                            Sample = @"",
                            FieldDatas = null
                        },
                        }
        }

        _queryDateTime = new HL7V22Field
        {
            field = message[@"QRD"][1],
            fieldData = fieldData
        };

        // check for repetitions
        if (_queryDateTime.field.FieldRepetitions != null && _queryDateTime.field.FieldRepetitions.Count > 0)
        {
            _queryDateTime.fieldRepetitions = HL7V2FieldGenerator.GenerateV22FieldRepetitions(_queryDateTime, fieldData);
        }

        return _queryDateTime;
    } 
}

internal HL7V22Field _queryFormatCode;

public HL7V22Field QueryFormatCode
{
    get
    {
        if (_queryFormatCode != null)
        {
            return _queryFormatCode;
        }

        var fieldData = new HL7V22FieldData
        {
            Id = @"QRD.2",
            Type = @"Field",
            Position = @"QRD.2",
            Name = @"Query Format Code",
            Length = 1,
            Usage = @"R",
            Rpt = @"1",
            DataType = @"ID",
            DataTypeName = @"Coded Value",
            TableId = @"0106",
            TableName = @"QUERY FORMAT CODE",
            Description = @"refer to table 0106 - query format code for valid codes",
            Sample = @"",
            Fields = null
        }

        _queryFormatCode = new HL7V22Field
        {
            field = message[@"QRD"][2],
            fieldData = fieldData
        };

        // check for repetitions
        if (_queryFormatCode.field.FieldRepetitions != null && _queryFormatCode.field.FieldRepetitions.Count > 0)
        {
            _queryFormatCode.fieldRepetitions = HL7V2FieldGenerator.GenerateV22FieldRepetitions(_queryFormatCode, fieldData);
        }

        return _queryFormatCode;
    } 
}

internal HL7V22Field _queryPriority;

public HL7V22Field QueryPriority
{
    get
    {
        if (_queryPriority != null)
        {
            return _queryPriority;
        }

        var fieldData = new HL7V22FieldData
        {
            Id = @"QRD.3",
            Type = @"Field",
            Position = @"QRD.3",
            Name = @"Query Priority",
            Length = 1,
            Usage = @"R",
            Rpt = @"1",
            DataType = @"ID",
            DataTypeName = @"Coded Value",
            TableId = @"0091",
            TableName = @"QUERY PRIORITY",
            Description = @"time frame in which the response is expected.  Refer to table 0091 - query priority for valid codes.  Table values and subsequent fields specify time frames for response",
            Sample = @"",
            Fields = null
        }

        _queryPriority = new HL7V22Field
        {
            field = message[@"QRD"][3],
            fieldData = fieldData
        };

        // check for repetitions
        if (_queryPriority.field.FieldRepetitions != null && _queryPriority.field.FieldRepetitions.Count > 0)
        {
            _queryPriority.fieldRepetitions = HL7V2FieldGenerator.GenerateV22FieldRepetitions(_queryPriority, fieldData);
        }

        return _queryPriority;
    } 
}

internal HL7V22Field _queryId;

public HL7V22Field QueryId
{
    get
    {
        if (_queryId != null)
        {
            return _queryId;
        }

        var fieldData = new HL7V22FieldData
        {
            Id = @"QRD.4",
            Type = @"Field",
            Position = @"QRD.4",
            Name = @"Query Id",
            Length = 10,
            Usage = @"R",
            Rpt = @"1",
            DataType = @"ST",
            DataTypeName = @"String Data",
            TableId = null,
            TableName = null,
            Description = @"unique identifier for the query.  Assigned by the querying application.  Returned intact by the responding application.",
            Sample = @"",
            Fields = null
        }

        _queryId = new HL7V22Field
        {
            field = message[@"QRD"][4],
            fieldData = fieldData
        };

        // check for repetitions
        if (_queryId.field.FieldRepetitions != null && _queryId.field.FieldRepetitions.Count > 0)
        {
            _queryId.fieldRepetitions = HL7V2FieldGenerator.GenerateV22FieldRepetitions(_queryId, fieldData);
        }

        return _queryId;
    } 
}

internal HL7V22Field _deferredResponseType;

public HL7V22Field DeferredResponseType
{
    get
    {
        if (_deferredResponseType != null)
        {
            return _deferredResponseType;
        }

        var fieldData = new HL7V22FieldData
        {
            Id = @"QRD.5",
            Type = @"Field",
            Position = @"QRD.5",
            Name = @"Deferred Response Type",
            Length = 1,
            Usage = @"O",
            Rpt = @"1",
            DataType = @"ID",
            DataTypeName = @"Coded Value",
            TableId = @"0107",
            TableName = @"DEFERRED RESPONSE TYPE",
            Description = @"refer to table 0107 - deferred response type for valid entries",
            Sample = @"",
            Fields = null
        }

        _deferredResponseType = new HL7V22Field
        {
            field = message[@"QRD"][5],
            fieldData = fieldData
        };

        // check for repetitions
        if (_deferredResponseType.field.FieldRepetitions != null && _deferredResponseType.field.FieldRepetitions.Count > 0)
        {
            _deferredResponseType.fieldRepetitions = HL7V2FieldGenerator.GenerateV22FieldRepetitions(_deferredResponseType, fieldData);
        }

        return _deferredResponseType;
    } 
}

internal HL7V22Field _deferredResponseDateTime;

public HL7V22Field DeferredResponseDateTime
{
    get
    {
        if (_deferredResponseDateTime != null)
        {
            return _deferredResponseDateTime;
        }

        var fieldData = new HL7V22FieldData
        {
            Id = @"QRD.6",
            Type = @"Field",
            Position = @"QRD.6",
            Name = @"Deferred Response Date / Time",
            Length = 26,
            Usage = @"O",
            Rpt = @"1",
            DataType = @"TS",
            DataTypeName = @"Time Stamp",
            TableId = null,
            TableName = null,
            Description = @"date/time before or after which to send a deferred response.  If not present, the response can be sent when its available",
            Sample = @"",
            Fields = new[]
                        {
                            new HL7V2FieldData
                        {
                            Id = @"QRD.6.1",
                            Type = @"Component",
                            Position = @"QRD.6.1",
                            Name = @"Time Of An Event",
                            Length = 0,
                            Usage = @"O",
                            Rpt = @"1",
                            DataType = @"ST",
                            DataTypeName = @"String Data",
                            TableId = null,
                            TableName = null,
                            Description = null,
                            Sample = @"",
                            FieldDatas = null
                        },
                        
                        new HL7V2FieldData
                        {
                            Id = @"QRD.6.2",
                            Type = @"Component",
                            Position = @"QRD.6.2",
                            Name = @"Degree Of Precision",
                            Length = 0,
                            Usage = @"O",
                            Rpt = @"1",
                            DataType = @"ST",
                            DataTypeName = @"String Data",
                            TableId = null,
                            TableName = null,
                            Description = null,
                            Sample = @"",
                            FieldDatas = null
                        },
                        }
        }

        _deferredResponseDateTime = new HL7V22Field
        {
            field = message[@"QRD"][6],
            fieldData = fieldData
        };

        // check for repetitions
        if (_deferredResponseDateTime.field.FieldRepetitions != null && _deferredResponseDateTime.field.FieldRepetitions.Count > 0)
        {
            _deferredResponseDateTime.fieldRepetitions = HL7V2FieldGenerator.GenerateV22FieldRepetitions(_deferredResponseDateTime, fieldData);
        }

        return _deferredResponseDateTime;
    } 
}

internal HL7V22Field _quantityLimitedRequest;

public HL7V22Field QuantityLimitedRequest
{
    get
    {
        if (_quantityLimitedRequest != null)
        {
            return _quantityLimitedRequest;
        }

        var fieldData = new HL7V22FieldData
        {
            Id = @"QRD.7",
            Type = @"Field",
            Position = @"QRD.7",
            Name = @"Quantity Limited Request",
            Length = 10,
            Usage = @"R",
            Rpt = @"1",
            DataType = @"CQ",
            DataTypeName = @"Composite Quantity With Units",
            TableId = null,
            TableName = null,
            Description = @"maximum length of the response that can be accepted by the requesting system.  Valid responses are numerical values given in the units specified in the second component.  Refer to table 0126 - quantity limited request for valid entries.  Default is LI lines",
            Sample = @"",
            Fields = new[]
                        {
                            new HL7V2FieldData
                        {
                            Id = @"QRD.7.1",
                            Type = @"Component",
                            Position = @"QRD.7.1",
                            Name = @"Quantity",
                            Length = 0,
                            Usage = @"O",
                            Rpt = @"1",
                            DataType = @"NM",
                            DataTypeName = @"Numeric",
                            TableId = null,
                            TableName = null,
                            Description = null,
                            Sample = @"",
                            FieldDatas = null
                        },
                        
                        new HL7V2FieldData
                        {
                            Id = @"QRD.7.2",
                            Type = @"Component",
                            Position = @"QRD.7.2",
                            Name = @"Units",
                            Length = 0,
                            Usage = @"O",
                            Rpt = @"1",
                            DataType = @"ST",
                            DataTypeName = @"String Data",
                            TableId = null,
                            TableName = null,
                            Description = @"The units in which the quantity is expressed.  Field-by-field, default units may be defined within the specifications.  When the observation is measured in the default units, the units need not be transmitted.  If the measure is recorded in units different from the default, the measurement units must be transmitted as the second component.  If the units are ISO+ units, then units should be recorded as lowercase abbreviations as specified in Chapter 7.  If the units are ANSI or local, the units and the source table must be recorded as specified in Chapter 7.  But in these cases the component separator should be replaced by the subcomponent delimiter ",
                            Sample = @"",
                            FieldDatas = null
                        },
                        }
        }

        _quantityLimitedRequest = new HL7V22Field
        {
            field = message[@"QRD"][7],
            fieldData = fieldData
        };

        // check for repetitions
        if (_quantityLimitedRequest.field.FieldRepetitions != null && _quantityLimitedRequest.field.FieldRepetitions.Count > 0)
        {
            _quantityLimitedRequest.fieldRepetitions = HL7V2FieldGenerator.GenerateV22FieldRepetitions(_quantityLimitedRequest, fieldData);
        }

        return _quantityLimitedRequest;
    } 
}

internal HL7V22Field _whoSubjectFilter;

public HL7V22Field WhoSubjectFilter
{
    get
    {
        if (_whoSubjectFilter != null)
        {
            return _whoSubjectFilter;
        }

        var fieldData = new HL7V22FieldData
        {
            Id = @"QRD.8",
            Type = @"Field",
            Position = @"QRD.8",
            Name = @"Who Subject Filter",
            Length = 20,
            Usage = @"R",
            Rpt = @"*",
            DataType = @"ST",
            DataTypeName = @"String Data",
            TableId = null,
            TableName = null,
            Description = @"identifies the subject, or who the inquiry is about",
            Sample = @"",
            Fields = null
        }

        _whoSubjectFilter = new HL7V22Field
        {
            field = message[@"QRD"][8],
            fieldData = fieldData
        };

        // check for repetitions
        if (_whoSubjectFilter.field.FieldRepetitions != null && _whoSubjectFilter.field.FieldRepetitions.Count > 0)
        {
            _whoSubjectFilter.fieldRepetitions = HL7V2FieldGenerator.GenerateV22FieldRepetitions(_whoSubjectFilter, fieldData);
        }

        return _whoSubjectFilter;
    } 
}

internal HL7V22Field _whatSubjectFilter;

public HL7V22Field WhatSubjectFilter
{
    get
    {
        if (_whatSubjectFilter != null)
        {
            return _whatSubjectFilter;
        }

        var fieldData = new HL7V22FieldData
        {
            Id = @"QRD.9",
            Type = @"Field",
            Position = @"QRD.9",
            Name = @"What Subject Filter",
            Length = 3,
            Usage = @"R",
            Rpt = @"*",
            DataType = @"ID",
            DataTypeName = @"Coded Value",
            TableId = @"0048",
            TableName = @"WHAT SUBJECT FILTER",
            Description = @"describes the kind of information that is required to satisfy the request.  Valid codes define the type of transaction inquiry and may be extended locally during implementation",
            Sample = @"",
            Fields = null
        }

        _whatSubjectFilter = new HL7V22Field
        {
            field = message[@"QRD"][9],
            fieldData = fieldData
        };

        // check for repetitions
        if (_whatSubjectFilter.field.FieldRepetitions != null && _whatSubjectFilter.field.FieldRepetitions.Count > 0)
        {
            _whatSubjectFilter.fieldRepetitions = HL7V2FieldGenerator.GenerateV22FieldRepetitions(_whatSubjectFilter, fieldData);
        }

        return _whatSubjectFilter;
    } 
}

internal HL7V22Field _whatDepartmentDataCode;

public HL7V22Field WhatDepartmentDataCode
{
    get
    {
        if (_whatDepartmentDataCode != null)
        {
            return _whatDepartmentDataCode;
        }

        var fieldData = new HL7V22FieldData
        {
            Id = @"QRD.10",
            Type = @"Field",
            Position = @"QRD.10",
            Name = @"What Department Data Code",
            Length = 20,
            Usage = @"R",
            Rpt = @"*",
            DataType = @"ST",
            DataTypeName = @"String Data",
            TableId = null,
            TableName = null,
            Description = @"possible contents include test number, procedure number, drug code, item number, order number, etc.  The contents of this field are determined by the contents of the previous field. This field could contain multiple occurrences separated by repetition delimiters",
            Sample = @"",
            Fields = null
        }

        _whatDepartmentDataCode = new HL7V22Field
        {
            field = message[@"QRD"][10],
            fieldData = fieldData
        };

        // check for repetitions
        if (_whatDepartmentDataCode.field.FieldRepetitions != null && _whatDepartmentDataCode.field.FieldRepetitions.Count > 0)
        {
            _whatDepartmentDataCode.fieldRepetitions = HL7V2FieldGenerator.GenerateV22FieldRepetitions(_whatDepartmentDataCode, fieldData);
        }

        return _whatDepartmentDataCode;
    } 
}

internal HL7V22Field _whatDataCodeValueQualifier;

public HL7V22Field WhatDataCodeValueQualifier
{
    get
    {
        if (_whatDataCodeValueQualifier != null)
        {
            return _whatDataCodeValueQualifier;
        }

        var fieldData = new HL7V22FieldData
        {
            Id = @"QRD.11",
            Type = @"Field",
            Position = @"QRD.11",
            Name = @"What Data Code Value Qualifier",
            Length = 20,
            Usage = @"O",
            Rpt = @"*",
            DataType = @"CM_VR",
            DataTypeName = @"Value Qualifier",
            TableId = null,
            TableName = null,
            Description = @"what data code value qualifier.  A window or range to further refine the inquiry.  This field would contain start/stop separated by component separators",
            Sample = @"",
            Fields = new[]
                        {
                            new HL7V2FieldData
                        {
                            Id = @"QRD.11.1",
                            Type = @"Component",
                            Position = @"QRD.11.1",
                            Name = @"First Data Code Value",
                            Length = 0,
                            Usage = @"O",
                            Rpt = @"1",
                            DataType = @"ST",
                            DataTypeName = @"String Data",
                            TableId = null,
                            TableName = null,
                            Description = null,
                            Sample = @"",
                            FieldDatas = null
                        },
                        
                        new HL7V2FieldData
                        {
                            Id = @"QRD.11.2",
                            Type = @"Component",
                            Position = @"QRD.11.2",
                            Name = @"Last Data Code Calue",
                            Length = 0,
                            Usage = @"O",
                            Rpt = @"1",
                            DataType = @"ST",
                            DataTypeName = @"String Data",
                            TableId = null,
                            TableName = null,
                            Description = null,
                            Sample = @"",
                            FieldDatas = null
                        },
                        }
        }

        _whatDataCodeValueQualifier = new HL7V22Field
        {
            field = message[@"QRD"][11],
            fieldData = fieldData
        };

        // check for repetitions
        if (_whatDataCodeValueQualifier.field.FieldRepetitions != null && _whatDataCodeValueQualifier.field.FieldRepetitions.Count > 0)
        {
            _whatDataCodeValueQualifier.fieldRepetitions = HL7V2FieldGenerator.GenerateV22FieldRepetitions(_whatDataCodeValueQualifier, fieldData);
        }

        return _whatDataCodeValueQualifier;
    } 
}

internal HL7V22Field _queryResultsLevel;

public HL7V22Field QueryResultsLevel
{
    get
    {
        if (_queryResultsLevel != null)
        {
            return _queryResultsLevel;
        }

        var fieldData = new HL7V22FieldData
        {
            Id = @"QRD.12",
            Type = @"Field",
            Position = @"QRD.12",
            Name = @"Query Results Level",
            Length = 1,
            Usage = @"O",
            Rpt = @"1",
            DataType = @"ID",
            DataTypeName = @"Coded Value",
            TableId = @"0108",
            TableName = @"QUERY RESULTS LEVEL",
            Description = @"used to control level of detail in results.  Refer to table 0108 - query results level for valid codes",
            Sample = @"",
            Fields = null
        }

        _queryResultsLevel = new HL7V22Field
        {
            field = message[@"QRD"][12],
            fieldData = fieldData
        };

        // check for repetitions
        if (_queryResultsLevel.field.FieldRepetitions != null && _queryResultsLevel.field.FieldRepetitions.Count > 0)
        {
            _queryResultsLevel.fieldRepetitions = HL7V2FieldGenerator.GenerateV22FieldRepetitions(_queryResultsLevel, fieldData);
        }

        return _queryResultsLevel;
    } 
}
    }
}
