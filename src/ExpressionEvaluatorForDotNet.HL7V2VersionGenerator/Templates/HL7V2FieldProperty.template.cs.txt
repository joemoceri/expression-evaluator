
internal HL7V[{-VERSION-}]Field [{-FIELD_NAME_PROPERTY_NAME_LOWER-}];

public HL7V[{-VERSION-}]Field [{-FIELD_NAME_PROPERTY_NAME-}]
{
    get
    {
        if ([{-FIELD_NAME_PROPERTY_NAME_LOWER-}] != null)
        {
            return [{-FIELD_NAME_PROPERTY_NAME_LOWER-}];
        }

        [{-FIELD_NAME_PROPERTY_NAME_LOWER-}] = new HL7V[{-VERSION-}]Field
        {
            field = message[[{-SEGMENT_ID-}]][[{-FIELD_PROPERTY_ID-}]],
            Id = [{-ID-}],
            Type = [{-TYPE-}],
            Position = [{-POSITION-}],
            Name = [{-NAME-}],
            Length = [{-LENGTH-}],
            Usage = [{-USAGE-}],
            Rpt = [{-RPT-}],
            DataType = [{-DATA_TYPE-}],
            DataTypeName = [{-DATA_TYPE_NAME-}],
            TableId = [{-TABLE_ID-}],
            TableName = [{-TABLE_NAME-}],
            Description = [{-DESCRIPTION-}],
            Sample = [{-SAMPLE-}],
        };

        // check for repetitions
        if ([{-FIELD_NAME_PROPERTY_NAME_LOWER-}].field.FieldRepetitions != null && [{-FIELD_NAME_PROPERTY_NAME_LOWER-}].field.FieldRepetitions.Count > 0)
        {
            // get this fields data
            var fieldData = Fields.First(fd => fd.Id.Equals([{-FIELD_NAME_PROPERTY_NAME_LOWER-}].Id));
            var fieldRepetitions = new List<HL7V[{-VERSION-}]FieldRepetition>();

            for (var i = 0; i < [{-FIELD_NAME_PROPERTY_NAME_LOWER-}].field.FieldRepetitions.Count; i++)
            {
                var fieldRepetition = new HL7V[{-VERSION-}]FieldRepetition
                {
                    fieldRepetition = [{-FIELD_NAME_PROPERTY_NAME_LOWER-}].field.FieldRepetitions[i],
                    Id = fieldData.Id,
                    Type = fieldData.Type,
                    Position = fieldData.Position,
                    Name = fieldData.Name,
                    Length = fieldData.Length,
                    Usage = fieldData.Usage,
                    Rpt = fieldData.Rpt,
                    DataType = fieldData.DataType,
                    DataTypeName = fieldData.DataTypeName,
                    TableId = fieldData.TableId,
                    TableName = fieldData.TableName,
                    Description = fieldData.Description,
                    Sample = fieldData.Sample
                };

                // check for components if the definition specifies it does
                if (fieldData.FieldDatas != null && fieldData.FieldDatas.Count > 0)
                {
                    var components = new List<HL7V[{-VERSION-}]Component>();

                    // there should be components per repetition
                    for (var j = 0; j < [{-FIELD_NAME_PROPERTY_NAME_LOWER-}].field.Components(i + 1).Count; j++)
                    {
                        var componentFieldData = fieldData.FieldDatas[j];
                        var component = new HL7V[{-VERSION-}]Component
                        {
                            component = [{-FIELD_NAME_PROPERTY_NAME_LOWER-}].field.FieldRepetitions[i].Components[j],
                            Id = componentFieldData.Id,
                            Type = componentFieldData.Type,
                            Position = componentFieldData.Position,
                            Name = componentFieldData.Name,
                            Length = componentFieldData.Length,
                            Usage = componentFieldData.Usage,
                            Rpt = componentFieldData.Rpt,
                            DataType = componentFieldData.DataType,
                            DataTypeName = componentFieldData.DataTypeName,
                            TableId = componentFieldData.TableId,
                            TableName = componentFieldData.TableName,
                            Description = componentFieldData.Description,
                            Sample = componentFieldData.Sample
                        };

                        // check for sub components
                        if (componentFieldData.FieldDatas != null && componentFieldData.FieldDatas.Count > 0)
                        {
                            var subComponents = new List<HL7V[{-VERSION-}]SubComponent>();

                            for (var k = 0; k < [{-FIELD_NAME_PROPERTY_NAME_LOWER-}].field.Components(i + 1)[j].SubComponents.Count; k++)
                            {
                                var subComponentFieldData = componentFieldData.FieldDatas[k];
                                var subComponent = new HL7V[{-VERSION-}]SubComponent
                                {
                                    subComponent = [{-FIELD_NAME_PROPERTY_NAME_LOWER-}].field.FieldRepetitions[i].Components[j].SubComponents[k],
                                    Id = subComponentFieldData.Id,
                                    Type = subComponentFieldData.Type,
                                    Position = subComponentFieldData.Position,
                                    Name = subComponentFieldData.Name,
                                    Length = subComponentFieldData.Length,
                                    Usage = subComponentFieldData.Usage,
                                    Rpt = subComponentFieldData.Rpt,
                                    DataType = subComponentFieldData.DataType,
                                    DataTypeName = subComponentFieldData.DataTypeName,
                                    TableId = subComponentFieldData.TableId,
                                    TableName = subComponentFieldData.TableName,
                                    Description = subComponentFieldData.Description,
                                    Sample = subComponentFieldData.Sample
                                };

                                subComponents.Add(subComponent);
                            }

                            component.subComponents = subComponents;
                        }

                        components.Add(component);
                    }

                    fieldRepetition.components = components;
                }

                fieldRepetitions.Add(fieldRepetition);
            }
                     
            [{-FIELD_NAME_PROPERTY_NAME_LOWER-}].fieldRepetitions = fieldRepetitions;
        }

        return [{-FIELD_NAME_PROPERTY_NAME_LOWER-}];
    } 
}